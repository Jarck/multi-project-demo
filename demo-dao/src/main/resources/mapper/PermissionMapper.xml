<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hello.world.dao.PermissionMapper">
    <resultMap id="BaseResultMap" type="com.hello.world.entity.Permission">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="permission" jdbcType="VARCHAR" property="permission"/>
        <result column="resource_type" jdbcType="VARCHAR" property="resourceType"/>
        <result column="available" javaType="com.hello.world.enums.PermissionAvailableEnum" property="available"/>
        <result column="created_at" jdbcType="TIMESTAMP" property="createdAt"/>
        <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt"/>
    </resultMap>

    <resultMap id="permissionDtoMap" type="com.hello.world.dto.result.PermissionDto">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="permission" jdbcType="VARCHAR" property="permission"/>
        <result column="resource_type" jdbcType="VARCHAR" property="resourceType"/>
        <result column="available" javaType="com.hello.world.enums.PermissionAvailableEnum" property="available"/>
    </resultMap>

    <sql id="Base_Column_List">
        id, name, permission, resource_type, available, created_at, updated_at
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="permissionDtoMap">
        select
        <include refid="Base_Column_List"/>
        from permission
        where id = #{id,jdbcType=BIGINT}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from permission
        where id = #{id,jdbcType=BIGINT}
    </delete>

    <update id="update" parameterType="com.hello.world.entity.Permission">
        update permission
        <set>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="permission != null">
                permission = #{permission,jdbcType=VARCHAR},
            </if>
            <if test="resourceType != null">
                resource_type = #{resourceType,jdbcType=VARCHAR},
            </if>
            <if test="available != null">
                available = #{available},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>

    <insert id="insertPermission" useGeneratedKeys="true" keyProperty="id">
        insert into permission (name, permission, resource_type)
        values (#{name}, #{permission}, #{resourceType})
    </insert>

    <select id="findAll" resultMap="permissionDtoMap">
        select
        <include refid="Base_Column_List"/>
        from permission
        where available = 1
    </select>

    <select id="searchWithName" parameterType="java.lang.String" resultMap="permissionDtoMap">
        select
        <include refid="Base_Column_List"/>
        from permission
        where name like concat(#{name}, '%')
        and available = 1
    </select>
    <select id="searchWithRoleId" parameterType="java.lang.Long" resultMap="permissionDtoMap">
        select permission.*
        from permission
        left join role_permission on permission.id = role_permission.permission_id
        where role_permission.role_id = #{roleId}
          and available = 1
      </select>
    <select id="searchWithUserId" parameterType="java.lang.Long" resultMap="permissionDtoMap">
        select permission.*
        from permission
        left join role_permission on permission.id = role_permission.permission_id
        left join user_role on user_role.role_id = role_permission.role_id
        where user_role.user_id = #{userId}
          and available = 1
      </select>
</mapper>